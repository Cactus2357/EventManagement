@page
@model EventManagement.Pages.Events.DetailsModel
@using EventManagement.Helpers
@using EventManagement.Models

@{
    ViewData["Title"] = Model.Event.Title;
}

@* <div>
    <h4>Event</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.StartTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.StartTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.EndTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.EndTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Organizer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Organizer.UserId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Venue)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Venue.VenueId)
        </dd>
    </dl>
</div> *@
<div>
    @* <a asp-page="./Index">Back</a> *@
    <a href="javascript:void(0);" onclick="history.back()">Back</a>
</div>

<div class="container">
    <h2>
        @Model.Event.Title
        @{
            string color = Model.Event.Status switch
            {
                "upcoming" => "primary",
                "completed" => "success",
                "cancelled" => "secondary",
                _ => "dark",
            };

            <span class="badge rounded-pill bg-@color">@Model.Event.Status</span>
        }
    </h2>
    <p>
        <figcaption class="blockquote-footer mb-0 text-muted">
            Organized by <a asp-page="/Users/Details" asp-route-id="@Model.Event.OrganizerId">@Model.Event.Organizer.Name</a>
        </figcaption>
    </p>

    <ul class="nav nav-tabs" id="eventTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab">Details</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="schedules-tab" data-bs-toggle="tab" data-bs-target="#schedules" type="button" role="tab">Schedules</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="tickets-tab" data-bs-toggle="tab" data-bs-target="#tickets" type="button" role="tab">Available Tickets</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="feedbacks-tab" data-bs-toggle="tab" data-bs-target="#feedbacks" type="button" role="tab">Feedbacks</button>
        </li>
    </ul>

    <div class="tab-content pt-3" id="eventTabContent">
        <div class="tab-pane pt-4 fade show active" id="details" role="tabpanel" aria-labelledby="details-tab">
            <div class="mb-5">
                <h5>
                    Event Description
                    @if (User.IsAdmin() || User.IsEventOwner(Model.Event.OrganizerId))
                    {
                        <a asp-page="./Edit" asp-route-id="@Model.Event.EventId">Edit</a>
                    }
                </h5>
                <p>@Model.Event.Description</p>
            </div>
            <div class="row">
                <div class="col-6">
                    <h5>Location: @Model.Event.Venue.Name</h5>
                    @* <p><a asp-page="/Venues/Details" asp-route-id="@Model.Event.VenueId">@Model.Event.Venue.Name</a></p> *@
                    <p><b>Address:</b> @Model.Event.Venue.Address</p>
                    <p><b>Capacity:</b> @Model.Event.Venue.Capacity guests</p>
                </div>
                <div class="col-6">
                    @{
                        int duration = (int)(Model.Event.EndTime - Model.Event.StartTime).TotalHours;
                    }
                    <h5>Event Dates (duration: @duration hours)</h5>
                    <p><b>Start Date:</b> @Model.Event.StartTime.ToString("MMMM dd, yyyy 'at' hh:mm tt")</p>
                    <p><b>End Date:</b> @Model.Event.EndTime.ToString("MMMM dd, yyyy 'at' hh:mm tt")</p>
                </div>
            </div>
        </div>

        <div class="tab-pane pt-4 fade" id="schedules" role="tabpanel" aria-labelledby="schedules-tab">
            @* <p>Event schedules content here...</p> *@
            @if (Model.ScheduleItems.Count == 0)
            {
                <p class="text-muted text-center">No schedules for this event.</p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.ScheduleItems[0].Title)</th>
                            <th>@Html.DisplayNameFor(model => model.ScheduleItems[0].Speaker)</th>
                            <th>@Html.DisplayNameFor(model => model.ScheduleItems[0].StartTime)</th>
                            <th>@Html.DisplayNameFor(model => model.ScheduleItems[0].EndTime)</th>
                            @if (User.IsAdminOrOrganizer())
                            {
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ScheduleItems)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.Speaker)</td>
                                <td>@Html.DisplayFor(modelItem => item.StartTime)</td>
                                <td>@Html.DisplayFor(modelItem => item.EndTime)</td>
                                @if (User.IsAdminOrOrganizer())
                                {
                                    <td>
                                        <a asp-page="./Edit" asp-route-id="@item.ItemId">Edit</a> |
                                        <a asp-page="./Details" asp-route-id="@item.ItemId">Details</a> |
                                        <a asp-page="./Delete" asp-route-id="@item.ItemId">Delete</a>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>

        <div class="tab-pane pt-4 fade" id="tickets" role="tabpanel" aria-labelledby="tickets-tab">
            @* <p>Available tickets content here...</p> *@
            <table class="table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Tickets[0].Type)</th>
                        <th>@Html.DisplayNameFor(model => model.Tickets[0].Price)</th>
                        <th>Available</th>
                        @if (User.IsAdminOrOrganizer())
                        {
                            <th></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Tickets)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Type)</td>
                            <td>@Html.DisplayFor(modelItem => item.Price)</td>
                            <td>@(item.Quantity - item.Registrations.Sum(r => r.Quantity))</td>
                            @if (User.IsAdminOrOrganizer())
                            {
                                <td>
                                    <a asp-page="./Edit" asp-route-id="@item.TicketId">Edit</a> |
                                    <a asp-page="./Details" asp-route-id="@item.TicketId">Details</a> |
                                    <a asp-page="./Delete" asp-route-id="@item.TicketId">Delete</a>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            <div class="mb-5">
                <a class="btn btn-primary" asp-page="/Registrations/Create" asp-route-eventId="@Model.Event.EventId">Register Now</a>
            </div>
            @if (Model.Registrations.Count > 0)
            {
                <hr />
                <h5>Your Registrations</h5>
                <table class="table">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Registrations[0].Ticket.Type)</th>
                            <th>@Html.DisplayNameFor(model => model.Registrations[0].Quantity)</th>
                            <th>@Html.DisplayNameFor(model => model.Registrations[0].RegisteredAt)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Registrations)
                        {
                            <tr>
                                <td>@item.Ticket.Type</td>
                                <td>@item.Quantity</td>
                                <td>@item.RegisteredAt!.Value.ToString()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>

        <div class="tab-pane pt-4 fade" id="feedbacks" role="tabpanel" aria-labelledby="feedbacks-tab">
            @if (User.Identity!.IsAuthenticated && Model.Registrations.Count > 0 && Model.Feedbacks.FirstOrDefault(o => o.UserId == User.GetCurrentUserId()) == null)
            {
                <div class="container row mb-3">
                    @* <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#feedbackModal">
                            Leave Feedback
                        </button>
                        <!-- Feedback Modal -->
                        <div class="modal fade" id="feedbackModal" tabindex="-1" aria-labelledby="feedbackModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                </div>
                            </div>
                        </div> *@
                    <div class="card col-xl-9 mx-auto">
                        <div class="card-body">
                            <h5 class="card-title">Send feedback</h5>
                            <form id="feedbackForm">
                                <input type="hidden" name="EventId" value="@Model.Event.EventId" />
                                <div class="mb-3">
                                    <label for="Rating" class="form-label">Rating (1–5)</label>
                                    <input type="number" name="Rating" min="1" max="5" class="form-control" required />
                                </div>
                                <div class="mb-3">
                                    <textarea name="Comment" class="form-control" placeholder="Comment" required></textarea>
                                </div>
                                <div id="feedbackMessage" class="text-success mb-2"></div>
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </form>
                        </div>
                    </div>

                </div>
                <hr />
            }
            <div class="container">
                @foreach (var o in Model.Feedbacks)
                {
                    <div class="card w-50 mx-auto mb-2">
                        <div class="card-header">
                            @if (User.IsAdmin() || User.IsEventOwner(Model.Event.OrganizerId))
                            {
                                <a asp-page="/Users/Details" asp-route-id="@o.UserId">@o.User.Name</a>
                            }
                            else
                            {
                                <span class="me-3">@(o.UserId == User.GetCurrentUserId() ? "You" : o.User.Name)</span>
                            }
                            <span class="me-3">(@o.Rating / 5)</span> -- <span class="me-3">@o.SubmittedAt!.Value.ToShortDateString()</span>
                        </div>
                        <div class="card-body py-2">
                            @o.Comment
                        </div>
                    </div>
                }
                @if (Model.Feedbacks.Count == 0)
                {
                    <p class="text-muted text-center">No feedback submitted for this event.</p>
                }

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/EventHub")
            .build();

        connection.on("EventReload", function (eventTitle) {
            alert("A new event was added: " + eventTitle);
            location.reload();
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        $("#feedbackForm").submit(function (e) {
            e.preventDefault();

            const formData = $(this).serialize();

            $.ajax({
                type: "POST",
                url: "/api/feedback",
                data: formData,
                success: function (response) {
                    $("#feedbackMessage").text("Feedback submitted successfully.");
                    $("#feedbackForm")[0].reset();
                },
                error: function (xhr) {
                    let response = xhr.responseJSON;
                    let messages = [];

                    if (response?.errors) {
                        for (const key in response.errors) {
                            messages.push(response.errors[key].join(" "));
                        }
                    } else {
                        messages.push("Failed to submit feedback.");
                    }

                    $("#feedbackMessage")
                        .removeClass("text-success")
                        .addClass("text-danger")
                        .html(messages.join("<br/>"));
                }

            });
        });

    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
